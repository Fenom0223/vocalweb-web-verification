// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Configures an AI agent based on a user-provided prompt.
 *
 * - configureAIAgentWithPrompt - A function that configures the AI agent with a given prompt.
 * - ConfigureAIAgentInput - The input type for the configureAIAgentWithPrompt function.
 * - ConfigureAIAgentOutput - The return type for the configureAIAgentWithPrompt function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ConfigureAIAgentInputSchema = z.object({
  prompt: z.string().describe('The prompt to configure the AI agent.'),
});
export type ConfigureAIAgentInput = z.infer<typeof ConfigureAIAgentInputSchema>;

const ConfigureAIAgentOutputSchema = z.object({
  agentConfiguration: z
    .string()
    .describe('The configuration of the AI agent based on the prompt.'),
});
export type ConfigureAIAgentOutput = z.infer<typeof ConfigureAIAgentOutputSchema>;

export async function configureAIAgentWithPrompt(
  input: ConfigureAIAgentInput
): Promise<ConfigureAIAgentOutput> {
  return configureAIAgentWithPromptFlow(input);
}

const configureAIAgentWithPromptPrompt = ai.definePrompt({
  name: 'configureAIAgentWithPromptPrompt',
  input: {schema: ConfigureAIAgentInputSchema},
  output: {schema: ConfigureAIAgentOutputSchema},
  prompt: `Configure the AI agent based on the following prompt: {{{prompt}}}. Return the agent configuration as a string.`, // Improved prompt for clarity
});

const configureAIAgentWithPromptFlow = ai.defineFlow(
  {
    name: 'configureAIAgentWithPromptFlow',
    inputSchema: ConfigureAIAgentInputSchema,
    outputSchema: ConfigureAIAgentOutputSchema,
  },
  async input => {
    const {output} = await configureAIAgentWithPromptPrompt(input);
    return output!;
  }
);
